# Set these to the desired values
ARTIFACT_ID=k8s-ces-control
VERSION=0.0.0
GOTAG=1.19

MAKEFILES_VERSION=7.0.1
.DEFAULT_GOAL:=default
GENERATION_TARGET_DIR=generated
GENERATION_SOURCE_DIR=grpc-protobuf
GO_ENV_VARS=GOPRIVATE=github.com/cloudogu/cesapp
CUSTOM_GO_MOUNT=-v $(WORKDIR)/resources/compileHeaders/usr/include/btrfs:/usr/include/btrfs
INTEGRATION_TEST_NAME_PATTERN=.*_inttest$$

# You may want to overwrite existing variables for pre/post target actions to fit into your project.

PREPARE_PACKAGE=$(DEBIAN_CONTENT_DIR)/control/postinst $(DEBIAN_CONTENT_DIR)/control/postrm $(DEBIAN_CONTENT_DIR)/control/prerm

include build/make/variables.mk
include build/make/dependencies-gomod.mk
include build/make/build.mk
include build/make/test-common.mk
include build/make/test-unit.mk
include build/make/static-analysis.mk
include build/make/package-debian.mk
include build/make/deploy-debian.mk
include build/make/digital-signature.mk
include build/make/self-update.mk
include build/make/release.mk
include build/make/bats.mk


default: package signature

### Reimplementation to also clean build/deb
.PHONY: clean
clean: $(ADDITIONAL_CLEAN) ## Remove target and tmp directories
	rm -rf ${TARGET_DIR}
	rm -rf ${TMP_DIR}
	rm -rf ${UTILITY_BIN_PATH}
	rm -rf build/deb

.PHONY: dist-clean
dist-clean: clean ## Remove all generated directories
	rm -rf node_modules
	rm -rf public/vendor
	rm -rf vendor
	rm -rf npm-cache
	rm -rf bower

$(DEBIAN_CONTENT_DIR)/control/postinst: $(DEBIAN_CONTENT_DIR)/control
	@install -p -m 0755 $(WORKDIR)/deb/DEBIAN/postinst $@

$(DEBIAN_CONTENT_DIR)/control/postrm: $(DEBIAN_CONTENT_DIR)/control
	@install -p -m 0755 $(WORKDIR)/deb/DEBIAN/postrm $@

$(DEBIAN_CONTENT_DIR)/control/prerm: $(DEBIAN_CONTENT_DIR)/control
	@install -p -m 0755 $(WORKDIR)/deb/DEBIAN/prerm $@

# taken from: https://stackoverflow.com/a/10858332
# Check that given variables are set and all have non-empty values,
# die with an error otherwise.
#
# Params:
#   1. Variable name(s) to test.
#   2. (optional) Error message to print.
check_defined = \
    $(strip $(foreach 1,$1, \
        $(call __check_defined,$1,$(strip $(value 2)))))
__check_defined = \
    $(if $(value $1),, \
      $(error Undefined $1$(if $2, ($2))))

##@ cesappd
.PHONY generate-netrc:
generate-netrc: ## generates a .netrc file which contains the credentials to access private Github repositories
	@:$(call check_defined, GIT_USER, GIT_USER is not set. You need to export it before executing this command. See docs for more information)
	@:$(call check_defined, GIT_USER_TOKEN, GIT_USER_TOKEN is not set. You need to export it before executing this command. See docs for more information)
	@echo Generating .netrc file
	@rm -f .netrc
	@echo "machine github.com" >> .netrc
	@echo "login ${GIT_USER}" >> .netrc
	@echo "password ${GIT_USER_TOKEN}" >> .netrc

.PHONY install-grpc-tools:
install-grpc-tools: ## install gRPC tools
	@echo Installing protoc-gen-go
	@go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
	@echo Installing protoc-gen-go-grpc
	@go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
	@go mod vendor

.PHONY generate-grpc:
generate-grpc: ## generate gRPC stubs
	@echo Generating gRPC service code
	@rm -rf ./generated
	@mkdir generated
	@protoc \
--go_out=./${GENERATION_TARGET_DIR} \
--go_opt=module="github.com/cloudogu/cesappd/generated" \
--go-grpc_opt=module="github.com/cloudogu/cesappd/generated" \
--go-grpc_out=./${GENERATION_TARGET_DIR} \
-I ${GENERATION_SOURCE_DIR} \
./${GENERATION_SOURCE_DIR}/*.proto
	@git add ${GENERATION_TARGET_DIR}
	@echo "Make sure to update the generated mock files"
