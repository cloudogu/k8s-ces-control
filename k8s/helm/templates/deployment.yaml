apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-ces-control.name" . }}
  labels:
    {{- include "k8s-ces-control.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.manager.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "k8s-ces-control.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-ces-control.labels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: manager
          image: "{{ .Values.manager.image.registry }}/{{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag }}"
          imagePullPolicy: {{ .Values.manager.imagePullPolicy | default "IfNotPresent" }}
          volumeMounts:
            - mountPath: /etc/k8s-ces-control
              name: k8s-ces-control-server-certificate
              readOnly: false
          env:
            - name: LOG_LEVEL
              value: '{{ .Values.manager.env.logLevel  | default "info" }}'
            - name: STAGE
              value: '{{ .Values.manager.env.stage | default "production" }}'
            - name: LOKI_GATEWAY_URL
              value: "{{ .Values.lokiGateway.url }}"
            - name: LOKI_GATEWAY_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.lokiGateway.secretName }}"
                  key: "{{ .Values.lokiGateway.usernameKey }}"
            - name: LOKI_GATEWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.lokiGateway.secretName }}"
                  key: "{{ .Values.lokiGateway.passwordKey }}"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          startupProbe:
            exec:
              command: ["/bin/bash", "-c", "/grpc_health_probe -addr localhost:50051 || exit 1"]
            failureThreshold: 60
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["/bin/bash", "-c", "/grpc_health_probe -addr localhost:50051 || exit 1"]
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command: ["/bin/bash", "-c", "/grpc_health_probe -addr localhost:50051 || exit 1"]
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: grpc-port
              containerPort: 50051
              protocol: TCP
          resources:
            limits: {{ toYaml .Values.manager.resourceLimits | nindent 14 }}
            requests: {{ toYaml .Values.manager.resourceRequests | nindent 14 }}
      serviceAccountName: {{ include "k8s-ces-control.name" . }}
      volumes:
        # this secret is generated by k8s-ces-control during the start-up, the filenames will be those of the secret data map keys
        - name: k8s-ces-control-server-certificate
          secret:
            optional: true
            secretName: k8s-ces-control-server-certificate
